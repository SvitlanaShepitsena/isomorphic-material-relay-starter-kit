{
  "_args": [
    [
      "inline-style-prefixer@https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-0.6.7.tgz",
      "C:\\App\\isomorphic-material-relay-starter-kit"
    ]
  ],
  "_from": "inline-style-prefixer@>=0.6.6 <0.7.0",
  "_id": "inline-style-prefixer@0.6.7",
  "_inCache": true,
  "_location": "/inline-style-prefixer",
  "_phantomChildren": {},
  "_requested": {
    "name": "inline-style-prefixer",
    "raw": "inline-style-prefixer@https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-0.6.7.tgz",
    "rawSpec": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-0.6.7.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-0.6.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/material-ui"
  ],
  "_resolved": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-0.6.7.tgz",
  "_shasum": "eeb453c2c764aa7471d1cc916c206fb81aca4e75",
  "_shrinkwrap": null,
  "_spec": "inline-style-prefixer@https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-0.6.7.tgz",
  "_where": "C:\\App\\isomorphic-material-relay-starter-kit",
  "author": {
    "name": "Robin Frischmann"
  },
  "bugs": {
    "url": "https://github.com/rofrischmann/inline-style-prefixer/issues"
  },
  "dependencies": {
    "bowser": "^1.0.0"
  },
  "description": "Autoprefixer for inline styles using userAgent and caniuse data",
  "devDependencies": {
    "babel": "^5.6.14",
    "babelify": "^6.3.0",
    "browserify": "^11.1.0",
    "caniuse-api": "^1.4.1",
    "chai": "^3.2.0",
    "codeclimate-test-reporter": "^0.1.1",
    "esformatter": "^0.8.1",
    "esformatter-braces": "^1.2.1",
    "esformatter-collapse-objects": "^0.5.1",
    "esformatter-dot-notation": "^1.3.1",
    "esformatter-literal-notation": "^1.0.1",
    "esformatter-parseint": "^1.0.3",
    "esformatter-quote-props": "^1.0.2",
    "esformatter-quotes": "^1.0.3",
    "esformatter-remove-trailing-commas": "^1.0.1",
    "esformatter-spaced-lined-comment": "^2.0.1",
    "esformatter-var-each": "^2.1.0",
    "isparta": "^4.0.0",
    "mocha": "^2.2.5",
    "object-assign": "^4.0.1",
    "rimraf": "^2.4.2",
    "uglifyjs": "^2.4.10"
  },
  "files": [
    "LICENSE",
    "README.md",
    "lib/",
    "dist/"
  ],
  "homepage": "https://github.com/rofrischmann/inline-style-prefixer#readme",
  "keywords": [
    "react",
    "react styling",
    "prefixer",
    "inline styles",
    "autoprefixer",
    "vendor prefix",
    "userAgent"
  ],
  "license": "MIT",
  "main": "lib/Prefixer.js",
  "name": "inline-style-prefixer",
  "optionalDependencies": {},
  "readme": "<h1 align=\"center\"><img src=\"docs/res/logo.png\" width=600></div>\n</h1>\n[![Build Status](https://travis-ci.org/rofrischmann/inline-style-prefixer.svg)](https://travis-ci.org/rofrischmann/inline-style-prefixer)\n[![Test Coverage](https://codeclimate.com/github/rofrischmann/inline-style-prefixer/badges/coverage.svg)](https://codeclimate.com/github/rofrischmann/inline-style-prefixer/coverage)\n[![Code Climate](https://codeclimate.com/github/rofrischmann/inline-style-prefixer/badges/gpa.svg)](https://codeclimate.com/github/rofrischmann/inline-style-prefixer)\n[![npm version](https://badge.fury.io/js/inline-style-prefixer.svg)](http://badge.fury.io/js/inline-style-prefixer)\n[![npm downloads](https://img.shields.io/npm/dm/inline-style-prefixer.svg)](https://img.shields.io/npm/dm/inline-style-prefixer.svg)\n![Dependencies](https://david-dm.org/rofrischmann/inline-style-prefixer.svg)\n![Gzipped Size](https://img.shields.io/badge/gzipped-~8k-brightgreen.svg)\n\n**inline-style-prefixer** adds required **vendor prefixes** to your style object. It only adds prefixes if they're actually required by evaluating the browser's `userAgent` against data from [caniuse.com](http://caniuse.com/).\n\n# Browser Support\nSupports the major browsers with the following versions. <br>For legacy support check [custom build](custom-build--legacy-support).\n* Chrome: 30+\n* Safari: 6+\n* Firefox: 25+\n* Opera: 13+\n* IE: 9+\n* Edge 12+\n* iOS: 6+\n* Android: 4+\n* IE mobile: 9+\n* Opera mini: 5+\n* Android UC: 9+\n* Android Chrome: 30+\n\n#### Whitelisted Browser\nSome browser e.g. headless browsers are whitelisted to not throw errors and not prefix at all.\n* PhantomJS\n\n# Docs\nIf you got any issue using this prefixer, please first check the FAQ's. Most cases are already covered and provide a solid solution.\n\n* [FAQ](docs/FAQ.md)\n* [Supported Properties](docs/Properties.md)\n* [Special Plugins](docs/Plugins.md)\n\n# Usage\n```bash\nnpm install inline-style-prefixer\n```\n## Prefixer([config])\n\n```javascript\nimport Prefixer from 'inline-style-prefixer'\n\nconst styles = {\n  transition: '200ms all linear',\n  userSelect: 'none',\n  boxSizing: 'border-box',\n  display: 'flex',\n  color: 'blue'\n}\n\nconst prefixer = new Prefixer()\nconst prefixedStyles = prefixer.prefix(styles)\n\n// Assuming you are using e.g. Chrome version 25\n// prefixedStyles === output\nconst output = {\n  transition: '200ms all linear',\n  WebkitUserSelect: 'none',\n  boxSizing: 'border-box',\n  display: '-webkit-flex',\n  color: 'blue'\n}\n```\n### Config\n#### userAgent\n*Default: `navigator.userAgent`*\n\nSometimes your environment does not provide a proper userAgent string e.g. if you are **rendering on server-side**. Therefore optionally just pass a userAgent-string.\n\n```javascript\nconst customUserAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.155 Safari/537.36'\n\nconst prefixer = new Prefixer({userAgent: customUserAgent})\n```\n\n#### keepUnprefixed\n*Default: `false`*\n\nUse this option to keep default values. This should be used if you're facing wrong prefixes.\n```javascript\nconst styles = {\n  userSelect: 'none',\n  display: 'flex'\n}\n\nconst prefixer = new Prefixer({keepUnprefixed: true})\nconst prefixedStyles = prefixer.prefix(styles)\n\n// Assuming you are using e.g. Chrome version 22\n// prefixedStyles === output\nconst output = {\n  WebkitUserSelect: 'none',  \n  // unprefixed properties do not get removed\n  userSelect: 'none',\n  // unprefixed values will be appended to the string\n  display: '-webkit-flex;display:flex'\n}\n```\n## Prefixer.prefixAll (static)\nSometimes you might to prerender something without knowing the userAgent yet. Use the static `prefixAll` to achieve that.\n\n```javascript\nconst styles = {alignItems: 'center'}\n\nconst prefixedStyles = Prefixer.prefixAll(styles)\n\n// the userAgent doesn't matter\n// prefixedStyles === output\nconst output = {\n  MozAlignItems: 'center',\n  WebkitAlignItems: 'center',\n  msAlignItems: 'center',\n  alignItems: 'center',\n  // it also adds legacy properties\n  // by running every plugin available\n  WebkitBoxAlign: 'center',\n  msFlexAlign: 'center',\n}\n```\n\n## Prefix Information\nEvery `Prefixer` instance also provides prefix information.\n```javascript\n// e.g. using a Chrome version 40 userAgent\nprefixer.cssPrefix = '-webkit-'\nprefixer.jsPrefix = 'Webkit'\nprefixer.prefixedKeyframes = '-webkit-keyframes'\n```\n\n# Custom Build & Legacy Support\nYou may have to create a custom build if you need older browser versions. Just modify the [config.js](config.js) file which includes all the browser version specifications.\n```sh\nnpm install\nnpm run build\n```\n\n# License\n**inline-style-prefixer** is licensed under the [MIT License](http://opensource.org/licenses/MIT).<br>\nDocumentation is licensed under [Creative Common License](http://creativecommons.org/licenses/by/4.0/).<br>\nCreated with â™¥ by [@rofrischmann](http://rofrischmann.de).\n\n# Contributing\nI would love to see people getting involved.<br>\nIf you have a feature request please create an issue. Also if you're even improving inline-style-prefixer by any kind please don't be shy and send a pull request to let everyone benefit.\n\n### Issues\nIf you're having any issue please let me know as fast as possible to find a solution a hopefully fix the issue. Try to add as much information as possible such as your environment, exact case, the line of actions to reproduce the issue.\n\n### Pull Requests\nIf you are creating a pull request, try to use commit messages that are self-explanatory. Also always add some **tests** unless it's totally senseless (add a reason why it's senseless) and test your code before you commit so Travis won't throw errors.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rofrischmann/inline-style-prefixer.git"
  },
  "scripts": {
    "babel": "babel modules/ --out-dir lib",
    "build": "npm run clean && mkdir dist && npm run babel && npm run generate && npm run bundle",
    "bundle": "browserify lib/Prefixer.js --s Prefixer > dist/prefixer.js && uglifyjs dist/prefixer.js -o dist/prefixer.min.js",
    "clean": "rimraf lib dist coverage",
    "coverage": "codeclimate-test-reporter < coverage/lcov.info",
    "generate": "node ./generator/generateData.js",
    "pretest": "npm run clean && npm run babel && npm run generate",
    "release": "npm run build && npm publish",
    "test": "mocha --recursive --compilers js:babel/register",
    "test:coverage": "babel-node ./node_modules/isparta/bin/isparta cover ./node_modules/mocha/bin/_mocha -- --recursive"
  },
  "version": "0.6.7"
}
