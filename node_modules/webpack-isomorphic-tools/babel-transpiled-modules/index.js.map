{"version":3,"sources":["../source/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;qBAAmB,MAAM;;;;kBACN,IAAI;;;;6BAEI,gBAAgB;;;;wBAChB,aAAa;;;;wBAEnB,WAAW;;;;uBAE+C,WAAW;;sBAC8B,UAAU;;;;;IAI7G,wBAAwB;AAQjC,UARS,wBAAwB,CAQhC,OAAO,EACnB;wBAToB,wBAAwB;;OAG5C,KAAK,GAAG,EAAE;OAGV,aAAa,GAAG,EAAE;;;AAKjB,MAAI,CAAC,OAAO,GAAG,SAhBO,uBAAuB,CAgBN,SAhBxB,KAAK,CAgByB,OAAO,CAAC,CAAC,CAAA;;;AAGtD,UAlB+B,iBAAiB,CAkB9B,IAAI,CAAC,OAAO,CAAC,CAAA;;;AAG/B,MAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EACtB;AACC,8BAAe,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAA;GACvC;;;AAGD,MAAI,CAAC,GAAG,GAAG,0BAAQ,0BAA0B,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAA;;AAE7E,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oDAAoD,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;EAClF;;;;;AA1BmB,yBAAwB,WA8B5C,WAAW,GAAA,qBAAC,IAAI,EAChB;;AAEC,MAAI,CAAC,OAAO,CAAC,WAAW,GAAG,SAtCpB,MAAM,CAsCqB,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAA;;AAErD,MAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAC5B;AACC,OAAI,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAA;GAC3C,MAED;AACC,OAAI,CAAC,GAAG,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAA;GAC1C;;;AAGD,SAAO,IAAI,CAAA;EACX;;;;;AA9CmB,yBAAwB,WAkD5C,MAAM,GAAA,kBACN;;AAEC,MAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAC5B;;;;;AAKC,OAAI,CAAC,gBAAG,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAC5C;AACC,QAAI,CAAC,GAAG,CAAC,KAAK,OAAK,IAAI,CAAC,mBAAmB,qGAAiG,CAAA;AAC5I,WAAO,QAlEF,sBAAsB,EAkEI,CAAA;IAC/B;GACD;;AAED,SAAO,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;EACxC;;;;AAnEmB,yBAAwB,WAsE5C,OAAO,GAAA,mBACP;;AAEC,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAC7B;AACC,SAAM,IAAI,KAAK,CAAC,sIAAsI,CAAC,CAAA;GACvJ;;AAED,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAA;;;;;AAK3C,SAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;;;AAG9C,uBAAiB,IAAI,CAAC,aAAa,6GACnC;;;;;;;;;;;;OADS,KAAI;;AAEZ,OAAI,CAAC,GAAG,CAAC,KAAK,oCAAkC,KAAI,CAAG,CAAA;AACvD,UAAO,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,CAAA;GAC1B;;;AAGD,MAAI,CAAC,aAAa,GAAG,EAAE,CAAA;EACvB;;;;;;;;AA9FmB,yBAAwB,WAqG5C,eAAe,GAAA,2BACf;;;;AAEC,MAAI,CAAC,UAAU,GAAG,2BAAe,QAAQ,CAAC,UAAC,IAAI,EAAE,MAAM,EACvD;;AAEC,UAAO,QA/G0C,UAAU,CA+GzC,IAAI,EAAE,MAAM,EAAE,MAAK,OAAO,CAAC,YAAY,EAAE,MAAK,OAAO,CAAC,KAAK,EAAE,MAAK,GAAG,CAAC,CAAA;GACxF,CAAC,CAAA;;;AAGF,SAAO,IAAI,CAAA;EACX;;;;;;;;;;;;;;AAhHmB,yBAAwB,WA6H5C,MAAM,GAAA,gBAAC,YAAY,EAAE,QAAQ,EAC7B;;;;AAEC,MAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAA;;;AAGxC,MAAI,CAAC,mBAAmB,GAAG,kBAAK,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAA;;;AAGzG,MAAI,CAAC,QAAQ,EAAE,CAAA;;;AAGf,MAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EACtB;AACC,OAAI,CAAC,eAAe,EAAE,CAAA;GACtB;;;AAGD,MAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EACpC;AACC,OAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;GACjE;;;AAGD,MAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAChC;AACC,OAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;AACpD,OAAI,CAAC,sBAAsB,EAAE,CAAA;GAC7B;;;;;AAKD,MAAI,QAAQ,EACZ;;AAEC,UAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAA;GACrC;;OAGD;;AAEC,UAAO,aAAY,UAAC,OAAO,EAAE,MAAM;WAAK,OAAK,eAAe,CAAC,OAAO,CAAC;IAAA,CAAC,CAAA;GACtE;EACD;;;;;;;;;;;;;AAzKmB,yBAAwB,WAqL5C,QAAQ,GAAA,oBACR;AACC,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCxD,wBAAuB,aAAY,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,oHACvD;;;;;;;;;;;;OADS,UAAU;;AAElB,OAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;;AAEnD,yBAAsB,WAAW,CAAC,UAAU,oHAC5C;;;;;;;;;;;;QADS,SAAS;;AAEjB,QAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;IAC/C;GACD;;;AAGD,SAAO,IAAI,CAAA;EACX;;;;AAvOmB,yBAAwB,WA0O5C,kBAAkB,GAAA,4BAAC,SAAS,EAAE,WAAW,EACzC;;;AACC,MAAI,CAAC,GAAG,CAAC,KAAK,0CAAwC,SAAS,CAAG,CAAA;;;AAGlE,MAAI,SAAS,KAAK,MAAM,EACxB;AACC,OAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2BAAe,IAAI,CAAC,SAAS,EAAE,UAAA,IAAI,EACnD;;AAEC,QAAI,IAAI,KAAK,OAAK,mBAAmB,EACrC;AACC,YAAM;KACN;;AAED,WAAO,OAAK,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;IACtC,CAAC,CAAC,CAAA;GACH,MAED;AACC,OAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2BAAe,IAAI,CAAC,SAAS,EAAE,UAAA,IAAI;WAAI,OAAK,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC;IAAA,CAAC,CAAC,CAAA;GACxF;EACD;;;;AAhQmB,yBAAwB,WAmQ5C,0BAA0B,GAAA,oCAAC,mBAAmB,EAC9C;AACC,qBAAmB,GAAG,mBAAmB,CAAC,MAAM,CAAC,UAAA,CAAC;UAAI,CAAC,KAAK,cAAc;GAAA,CAAC,CAAA;;;;;AAK3E,MAAM,mBAAmB,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAA;;AAEvD,SAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,UAAS,OAAO,EAAE,KAAK,EACrD;AACC,QAAK,CAAC,GAAG,CAAC,UAAS,MAAM,EACzB;AACC,QAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,kBAAK,GAAG,CAAC,CAAA;AAClC,QAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,cAAc,EAC9C;AACC,UAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;AAC5B,YAAO,KAAK,CAAC,IAAI,CAAC,kBAAK,GAAG,CAAC,CAAA;KAC3B;IACD,CAAC,CACD,MAAM,CAAC,UAAS,MAAM,EACvB;AACC,WAAO,MAAM,CAAA;IACb,CAAC,CACD,OAAO,CAAC,UAAS,MAAM,EACxB;AACC,uBAAmB,CAAC,OAAO,CAAC,UAAS,iBAAiB,EACtD;AACC,UAAK,CAAC,IAAI,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAA;KACtC,CAAC,CAAA;IACF,CAAC,CAAA;;AAEF,UAAO,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;GAC1C,CAAA;EACD;;;;;;AArSmB,yBAAwB,WA0S5C,sBAAsB,GAAA,kCACtB;;;;;;;AAOC,MAAI,eAAe,k9CAuDhB,CAAA;;;AAGH,iBAAe,GAAG,sBAAS,MAAM,CAAC,eAAe,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAA;;AAE7E,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;;;;;AAK3C,MAAM,gBAAgB,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAA;;AAE7D,SAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAS,OAAO,EAAE,QAAQ,EACjE;;AAEC,OAAI,CAAC,SA7XsD,SAAS,CA6XrD,QAAQ,EAAE,KAAK,CAAC,EAC/B;;AAEC,WAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;IACrD;;;;AAID,OAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAC1C;;AAEC,WAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;IACrD;;AAED,QAAK,wCAAsC,QAAQ,OAAI,CAAA;;;AAGvD,OAAI,QAAQ,GAAG,EAAE,CAAA;;;AAGjB,OAAI,SAjZ0C,WAAW,CAiZzC,OAAO,mBAAiB,IAAI,SAjZE,WAAW,CAiZD,OAAO,iBAAiB,EAChF;AACC,YAAQ,kBAAkB,CAAA;IAC1B;;;AAGD,WAAQ,IAAI,eAAe,CAAA;;;AAG3B,UAAO,GAAG,QAAQ,GAAG,OAAO,CAAA;;;AAG5B,UAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;GACrD,CAAA;EACD;;;;AA1ZmB,yBAAwB,WA6Z5C,OAAO,GAAA,iBAAC,iBAAiB,EAAE,WAAW,EACtC;AACC,MAAI,CAAC,GAAG,CAAC,KAAK,2BAAyB,iBAAiB,CAAG,CAAA;;;;AAI3D,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAC9B;AACC,SAAM,IAAI,KAAK,gFAA+E,CAAA;GAC9F;;;AAGD,MAAM,UAAU,GAAG,QA7a2C,oBAAoB,CA6a1C,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;;;;;AAKrF,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,CAAC,EACrF;AACC,OAAI,CAAC,GAAG,CAAC,KAAK,iCAA+B,UAAU,CAAG,CAAA;AAC1D,UAAM;GACN;;;AAGD,MAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAC5B;;AAEC,OAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;GAC1C;;;AAGD,SAAO,2BAAe,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC,QAhcgB,YAAY,CAgcf,UAAU,CAAC,CAAC,CAAC,CAAA;EAC9F;;;;AA7bmB,yBAAwB,WAgc5C,YAAY,GAAA,sBAAC,UAAU,EACvB;AACC,MAAI,CAAC,GAAG,CAAC,KAAK,iBAAe,UAAU,CAAG,CAAA;;;AAG1C,MAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAA;;;AAGjC,MAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAA;;;;AAIhC,MAAI,CAAC,SAjdE,MAAM,CAidD,KAAK,CAAC,EAClB;AACC,OAAI,CAAC,GAAG,CAAC,KAAK,uBAAqB,UAAU,CAAG,CAAA;AAChD,UAAM;GACN;;;AAGD,SAAO,KAAK,CAAA;EACZ;;;;AApdmB,yBAAwB,WAud5C,IAAI,GAAA,gBACJ;;;AAGC,wBAAiB,IAAI,CAAC,KAAK,oHAC3B;;;;;;;;;;;;OADS,IAAI;;AAEZ,OAAI,CAAC,OAAO,EAAE,CAAA;GACd;;;;;AAKD,MAAI,IAAI,CAAC,UAAU,EACnB;AACC,OAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAA;GACzB;EACD;;;;AAvemB,yBAAwB,WA0e5C,QAAQ,GAAA,kBAAC,IAAI,EAAE,OAAO,EACtB;;AAEC,MAAI,CAAC,SAlfE,MAAM,CAkfD,OAAO,CAAC,OAAO,CAAC,EAC5B;AACC,UAAO,KAAK,CAAA;GACZ;;;AAGD,wBAAoB,OAAO,CAAC,OAAO,oHACnC;;;;;;;;;;;;OADS,OAAO;;;AAGf,OAAI,OAAO,YAAY,MAAM,EAC7B;AACC,QAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EACtB;AACC,YAAO,IAAI,CAAA;KACX;IACD;;QAEI,IAAI,OAAO,OAAO,KAAK,UAAU,EACtC;AACC,QAAI,OAAO,CAAC,IAAI,CAAC,EACjB;AACC,YAAO,IAAI,CAAA;KACX;IACD;;QAGD;AACC,QAAI,OAAO,KAAK,IAAI,EACpB;AACC,YAAO,IAAI,CAAA;KACX;IACD;GACD;;;;AAID,SAAO,KAAK,CAAA;EACZ;;;;AAlhBmB,yBAAwB,WAqhB5C,QAAQ,GAAA,kBAAC,IAAI,EAAE,OAAO,EACtB;;AAEC,MAAI,CAAC,SA7hBE,MAAM,CA6hBD,OAAO,CAAC,OAAO,CAAC,EAC5B;AACC,UAAO,IAAI,CAAA;GACX;;;AAGD,wBAAoB,OAAO,CAAC,OAAO,oHACnC;;;;;;;;;;;;OADS,OAAO;;;AAGf,OAAI,OAAO,YAAY,MAAM,EAC7B;AACC,QAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EACtB;AACC,YAAO,IAAI,CAAA;KACX;IACD;;QAEI,IAAI,OAAO,OAAO,KAAK,UAAU,EACtC;AACC,QAAI,OAAO,CAAC,IAAI,CAAC,EACjB;AACC,YAAO,IAAI,CAAA;KACX;IACD;;QAGD;AACC,QAAI,OAAO,KAAK,IAAI,EACpB;AACC,YAAO,IAAI,CAAA;KACX;IACD;GACD;;;;AAID,SAAO,KAAK,CAAA;EACZ;;;;;;;;;AA7jBmB,yBAAwB,WAqkB5C,eAAe,GAAA,yBAAC,IAAI,EACpB;;;;AAEC,MAAM,cAAc,GAAG,GAAG,CAAA;AAC1B,MAAM,gBAAgB,GAAG,IAAI,CAAA;;;AAG7B,MAAI,aAAa,GAAG,CAAC,CAAA;;;AAGrB,MAAM,KAAK,GAAG,IAAI,CAAA;;;AAGlB,WAAS,QAAQ,CAAC,SAAS,EAAE,OAAO,EACpC;AACC,YAAS,KAAK,GACd;;AAEC,QAAI,SAAS,EAAE,EACf;AACC,YAAO,OAAO,EAAE,CAAA;KAChB;;AAED,iBAAa,IAAI,cAAc,CAAA;;AAE/B,QAAI,aAAa,IAAI,gBAAgB,EACrC;AACC,kBAAa,GAAG,CAAC,CAAA;;AAEjB,UAAK,CAAC,GAAG,CAAC,KAAK,OAAK,KAAK,CAAC,mBAAmB,iBAAc,CAAA;AAC3D,UAAK,CAAC,GAAG,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAA;KACjE;;AAED,cAAU,CAAC,KAAK,EAAE,cAAc,CAAC,CAAA;IACjC;;AAED,QAAK,EAAE,CAAA;GACP;;;AAGD,UAAQ,CAAC;UAAM,gBAAG,UAAU,CAAC,OAAK,mBAAmB,CAAC;GAAA,EAAE,IAAI,CAAC,CAAA;;;AAG7D,SAAO,IAAI,CAAA;EACX;;QAjnBmB,wBAAwB;;;qBAAxB,wBAAwB","file":"index.js","sourcesContent":["import path   from 'path'\r\nimport fs     from 'fs'\r\n\r\nimport require_hacker from 'require-hacker'\r\nimport Log            from './tools/log'\r\n\r\nimport UglifyJS from 'uglify-js'\r\n\r\nimport { exists, clone, convert_from_camel_case, starts_with, ends_with } from './helpers'\r\nimport { default_webpack_assets, normalize_options, alias_hook, normalize_asset_path, webpack_path, uniform_path } from './common'\r\n\r\n// using ES6 template strings\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\r\nexport default class webpack_isomorphic_tools\r\n{\r\n\t// require() hooks for assets\r\n\thooks = []\r\n\r\n\t// used to keep track of cached assets and flush their caches on .refresh() call\r\n\tcached_assets = []\r\n\r\n\tconstructor(options)\r\n\t{\r\n\t\t// take the passed in options\r\n\t\tthis.options = convert_from_camel_case(clone(options))\r\n\r\n\t\t// add missing fields, etc\r\n\t\tnormalize_options(this.options)\r\n\r\n\t\t// set require-hacker debug mode if run in debug mode\r\n\t\tif (this.options.debug)\r\n\t\t{\r\n\t\t\trequire_hacker.log.options.debug = true\r\n\t\t}\r\n\r\n\t\t// logging\r\n\t\tthis.log = new Log('webpack-isomorphic-tools', { debug: this.options.debug })\r\n\r\n\t\tthis.log.debug('instantiated webpack-isomorphic-tools with options', this.options)\r\n\t}\r\n\r\n\t// sets development mode flag to whatever was passed (or true if nothing was passed)\r\n\t// (development mode allows asset hot reloading when used with webpack-dev-server)\r\n\tdevelopment(flag)\r\n\t{\r\n\t\t// set development mode flag\r\n\t\tthis.options.development = exists(flag) ? flag : true\r\n\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\tthis.log.debug('entering development mode')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.log.debug('entering production mode')\r\n\t\t}\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// returns a mapping to read file paths for all the user specified asset types\r\n\t// along with a couple of predefined ones: javascripts and styles\r\n\tassets()\r\n\t{\r\n\t\t// when in development mode\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\t// webpack and node.js start in parallel\r\n\t\t\t// so webpack-assets.json might not exist on the very first run\r\n\t\t\t// if a developer chose not to use the .server() method with a callback\r\n\t\t\t// (or if a developer chose not to wait for a Promise returned by the .server() method)\r\n\t\t\tif (!fs.existsSync(this.webpack_assets_path))\r\n\t\t\t{\r\n\t\t\t\tthis.log.error(`\"${this.webpack_assets_path}\" not found. Most likely it hasn't yet been generated by Webpack. Using an empty stub instead.`)\r\n\t\t\t\treturn default_webpack_assets()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn require(this.webpack_assets_path)\r\n\t}\r\n\r\n\t// clear the require.cache (only used in developer mode with webpack-dev-server)\r\n\trefresh()\r\n\t{\r\n\t\t// ensure this is development mode\r\n\t\tif (!this.options.development)\r\n\t\t{\r\n\t\t\tthrow new Error('.refresh() called in production mode. Did you forget to call .development() method on your webpack-isomorphic-tools server instance?')\r\n\t\t}\r\n\r\n\t\tthis.log.debug('flushing require() caches')\r\n\r\n\t\t// uncache webpack-assets.json file\r\n\t\t// this.log.debug(' flushing require() cache for webpack assets json file')\r\n\t\t// this.log.debug(` (was cached: ${typeof(require.cache[this.webpack_assets_path]) !== 'undefined'})`)\r\n\t\tdelete require.cache[this.webpack_assets_path]\r\n\r\n\t\t// uncache cached assets\r\n\t\tfor (let path of this.cached_assets)\r\n\t\t{\r\n\t\t\tthis.log.debug(` flushing require() cache for ${path}`)\r\n\t\t\tdelete require.cache[path]\r\n\t\t}\r\n\r\n\t\t// no assets are cached now\r\n\t\tthis.cached_assets = []\r\n\t}\r\n\r\n\t// Makes `webpack-isomorphic-tools` aware of Webpack aliasing feature.\r\n\t// https://webpack.github.io/docs/resolving.html#aliasing\r\n\t// The `aliases` parameter corresponds to `resolve.alias` \r\n\t// in your Webpack configuration. \r\n\t// If this method is used it must be called before the `.server()` method.\r\n\tenable_aliasing()\r\n\t{\r\n\t\t// mount require() hook\r\n\t\tthis.alias_hook = require_hacker.resolver((path, module) =>\r\n\t\t{\r\n\t\t\t// returns aliased global filesystem path\r\n\t\t\treturn alias_hook(path, module, this.options.project_path, this.options.alias, this.log)\r\n\t\t})\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// Initializes server-side instance of `webpack-isomorphic-tools` \r\n\t// with the base path for your project, then calls `.register()`,\r\n\t// and after that calls .wait_for_assets(callback).\r\n\t//\r\n\t// The `project_path` parameter must be identical \r\n\t// to the `context` parameter of your Webpack configuration \r\n\t// and is needed to locate `webpack-assets.json` \r\n\t//  which is output by Webpack process. \r\n\t//\r\n\t// sets up \"project_path\" option\r\n\t// (this option is required on the server to locate webpack-assets.json)\r\n\tserver(project_path, callback)\r\n\t{\r\n\t\t// project base path, required to locate webpack-assets.json\r\n\t\tthis.options.project_path = project_path\r\n\r\n\t\t// resolve webpack-assets.json file path\r\n\t\tthis.webpack_assets_path = path.resolve(this.options.project_path, this.options.webpack_assets_file_path)\r\n\r\n\t\t// register require() hooks\r\n\t\tthis.register()\r\n\r\n\t\t// if Webpack aliases are supplied, enable aliasing\r\n\t\tif (this.options.alias)\r\n\t\t{\r\n\t\t\tthis.enable_aliasing()\r\n\t\t}\r\n\r\n\t\t// if Webpack `modulesDirectories` are supplied, enable them\r\n\t\tif (this.options.modules_directories)\r\n\t\t{\r\n\t\t\tthis.inject_modules_directories(this.options.modules_directories)\r\n\t\t}\r\n\r\n\t\t// inject require.context() helper\r\n\t\tif (this.options.require_context)\r\n\t\t{\r\n\t\t\tthis.log.debug('Injecting require.context() helper')\r\n\t\t\tthis.inject_require_context()\r\n\t\t}\r\n\r\n\t\t// when ready: \r\n\r\n\t\t// if callback is given, call it back\r\n\t\tif (callback)\r\n\t\t{\r\n\t\t\t// call back when ready\r\n\t\t\treturn this.wait_for_assets(callback)\r\n\t\t}\r\n\t\t// otherwise resolve a Promise\r\n\t\telse\r\n\t\t{\r\n\t\t\t// no callback given, return a Promise\r\n\t\t\treturn new Promise((resolve, reject) => this.wait_for_assets(resolve))\r\n\t\t}\r\n\t}\r\n\r\n\t// Registers Node.js require() hooks for the assets\r\n\t//\r\n\t// This is what makes the `requre()` magic work on server. \r\n\t// These `require()` hooks must be set before you `require()` \r\n\t// any of your assets \r\n\t// (e.g. before you `require()` any React components \r\n\t// `require()`ing your assets).\r\n\t//\r\n\t// read this article if you don't know what a \"require hook\" is\r\n\t// http://bahmutov.calepin.co/hooking-into-node-loader-for-fun-and-profit.html\r\n\tregister()\r\n\t{\r\n\t\tthis.log.debug('registering require() hooks for assets')\r\n\r\n\t\t// // a helper array for extension matching\r\n\t\t// const extensions = []\r\n\t\t//\r\n\t\t// // for each user specified asset type,\r\n\t\t// // for each file extension,\r\n\t\t// // create an entry in the extension matching array\r\n\t\t// for (let asset_type of Object.keys(this.options.assets))\r\n\t\t// {\r\n\t\t// \tconst description = this.options.assets[asset_type]\r\n\t\t//\t\r\n\t\t// \tfor (let extension of description.extensions)\r\n\t\t// \t{\r\n\t\t// \t\textensions.push([`.${extension}`, description])\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t//\r\n\t\t// // registers a global require() hook which runs \r\n\t\t// // before the default Node.js require() logic\r\n\t\t// this.asset_hook = require_hacker.global_hook('webpack-asset', (path, module) =>\r\n\t\t// {\r\n\t\t// \t// for each asset file extension\r\n\t\t// \tfor (let extension of extensions)\r\n\t\t// \t{\r\n\t\t// \t\t// if the require()d path has this file extension\r\n\t\t// \t\tif (ends_with(path, extension[0]))\r\n\t\t// \t\t{\r\n\t\t// \t\t\t// then require() it using webpack-assets.json\r\n\t\t// \t\t\treturn this.require(require_hacker.resolve(path, module), extension[1])\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// })\r\n\r\n\t\t// for each user specified asset type,\r\n\t\t// register a require() hook for each file extension of this asset type\r\n\t\tfor (let asset_type of Object.keys(this.options.assets))\r\n\t\t{\r\n\t\t\tconst description = this.options.assets[asset_type]\r\n\t\t\t\r\n\t\t\tfor (let extension of description.extensions)\r\n\t\t\t{\r\n\t\t\t\tthis.register_extension(extension, description)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// registers a require hook for a particular file extension\r\n\tregister_extension(extension, description)\r\n\t{\r\n\t\tthis.log.debug(` registering a require() hook for *.${extension}`)\r\n\t\r\n\t\t// place the require() hook for this extension\r\n\t\tif (extension === 'json')\r\n\t\t{\r\n\t\t\tthis.hooks.push(require_hacker.hook(extension, path =>\r\n\t\t\t{\r\n\t\t\t\t// special case for require('webpack-assets.json') and 'json' asset extension\r\n\t\t\t\tif (path === this.webpack_assets_path)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.require(path, description)\r\n\t\t\t}))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.hooks.push(require_hacker.hook(extension, path => this.require(path, description)))\r\n\t\t}\r\n\t}\r\n\r\n\t// injects Webpack's `modulesDirectories` into Node.js module resolver\r\n\tinject_modules_directories(modules_directories)\r\n\t{\r\n\t\tmodules_directories = modules_directories.filter(x => x !== 'node_modules')\r\n\r\n\t\t// instrument Module._nodeModulePaths function\r\n\t\t// https://github.com/nodejs/node/blob/master/lib/module.js#L202\r\n\t\t//\r\n\t\tconst original_find_paths = require('module')._findPath\r\n\t\t//\r\n\t\trequire('module')._findPath = function(request, paths)\r\n\t\t{\r\n\t\t\tpaths.map(function(a_path)\r\n\t\t\t{\r\n\t\t\t\tvar parts = a_path.split(path.sep)\r\n\t\t\t\tif (parts[parts.length - 1] === 'node_modules')\r\n\t\t\t\t{\r\n\t\t\t\t\tparts[parts.length - 1] = ''\r\n\t\t\t\t\treturn parts.join(path.sep)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.filter(function(a_path)\r\n\t\t\t{\r\n\t\t\t\treturn a_path\r\n\t\t\t})\r\n\t\t\t.forEach(function(a_path)\r\n\t\t\t{\r\n\t\t\t\tmodules_directories.forEach(function(modules_directory)\r\n\t\t\t\t{\r\n\t\t\t\t\tpaths.push(a_path + modules_directory)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\treturn original_find_paths(request, paths)\r\n\t\t}\r\n\t}\r\n\r\n\t// injects the `context()` function into `require()` function\r\n\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/48#issuecomment-182878437\r\n\t// (this is a \"dirty\" way to do it but it works)\r\n\tinject_require_context()\r\n\t{\r\n\t\t// a source code of a function that\r\n\t\t// require()s all modules inside the `base` folder \r\n\t\t// and puts them into a hash map for further reference\r\n\t\t//\r\n\t\t// https://webpack.github.io/docs/context.html\r\n\t\t//\r\n\t\tlet require_context = `require.context = function(base, scan_subdirectories, regular_expression)\r\n\t\t{\r\n\t\t\tbase = require('path').join(require('path').dirname(this.filename), base)\r\n\r\n\t\t\tvar contents = {}\r\n\r\n\t\t\t// recursive function\r\n\t\t\tfunction read_directory(directory)\r\n\t\t\t{\r\n\t\t\t\trequire('fs').readdirSync(directory).forEach(function(child)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar full_path = require('path').resolve(directory, child)\r\n\r\n\t\t\t\t\tif (require('fs').statSync(full_path).isDirectory())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (scan_subdirectories)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tread_directory(full_path)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar asset_path = require('path').relative(base, full_path)\r\n\r\n\t\t\t\t\t\t// analogous to \"uniform_path\" from \"./common.js\"\r\n\t\t\t\t\t\tasset_path = (asset_path[0] === '.' ? asset_path : ('./' + asset_path)).replace(/\\\\\\\\/g, '/')\r\n\r\n\t\t\t\t\t\tif (regular_expression && !regular_expression.test(asset_path))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontents[asset_path] = full_path\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tread_directory(base)\r\n\r\n\t\t\tvar result = function(asset_path)\r\n\t\t\t{\r\n\t\t\t\treturn require(contents[asset_path])\r\n\t\t\t}\r\n\r\n\t\t\tresult.keys = function()\r\n\t\t\t{\r\n\t\t\t\treturn Object.keys(contents)\r\n\t\t\t}\r\n\r\n\t\t\tresult.resolve = function(asset_path)\r\n\t\t\t{\r\n\t\t\t\treturn contents[asset_path]\r\n\t\t\t}\r\n\r\n\t\t\treturn result\r\n\t\t};`\r\n\r\n\t\t// some code minification\r\n\t\trequire_context = UglifyJS.minify(require_context, { fromString: true }).code\r\n\r\n\t\tconst debug = this.log.debug.bind(this.log)\r\n\r\n\t\t// instrument Module.prototype._compile function\r\n\t\t// https://github.com/nodejs/node/blob/master/lib/module.js#L376-L380\r\n\t\t//\r\n\t\tconst original_compile = require('module').prototype._compile\r\n\t\t//\r\n\t\trequire('module').prototype._compile = function(content, filename)\r\n\t\t{\r\n\t\t\t// inject it only in .js files\r\n\t\t\tif (!ends_with(filename, '.js'))\r\n\t\t\t{\r\n\t\t\t\t// return value is undefined\r\n\t\t\t\treturn original_compile.call(this, content, filename)\r\n\t\t\t}\r\n\r\n\t\t\t// inject it only in .js files which \r\n\t\t\t// might probably have `require.context` reference\r\n\t\t\tif (content.indexOf('require.context') < 0)\r\n\t\t\t{\r\n\t\t\t\t// return value is undefined\r\n\t\t\t\treturn original_compile.call(this, content, filename)\r\n\t\t\t}\r\n\r\n\t\t\tdebug(`Injecting require.context() into \"${filename}\"`)\r\n\r\n\t\t\t// will be prepended to the module source code\r\n\t\t\tvar preamble = ''\r\n\r\n\t\t\t// account for \"use strict\" which is required to be in the beginning of the source code\r\n\t\t\tif (starts_with(content, `'use strict'`) || starts_with(content, `\"use strict\"`))\r\n\t\t\t{\r\n\t\t\t\tpreamble = `\"use strict\";`\r\n\t\t\t}\r\n\r\n\t\t\t// require.context() function definition\r\n\t\t\tpreamble += require_context \r\n\r\n\t\t\t// the \"dirty\" way\r\n\t\t\tcontent = preamble + content\r\n\r\n\t\t\t// return value is undefined\r\n\t\t\treturn original_compile.call(this, content, filename)\r\n\t\t}\r\n\t}\r\n\r\n\t// require()s an asset by a path\r\n\trequire(global_asset_path, description)\r\n\t{\r\n\t\tthis.log.debug(`require() called for ${global_asset_path}`)\r\n\r\n\t\t// sanity check\r\n\t\t/* istanbul ignore if */\r\n\t\tif (!this.options.project_path)\r\n\t\t{\r\n\t\t\tthrow new Error(`You forgot to call the .server() method passing it your project's base path`)\r\n\t\t}\r\n\r\n\t\t// convert global asset path to local-to-the-project asset path\r\n\t\tconst asset_path = normalize_asset_path(global_asset_path, this.options.project_path)\r\n\r\n\t\t// if this filename is in the user specified exceptions list\r\n\t\t// (or is not in the user explicitly specified inclusion list)\r\n\t\t// then fall back to the normal require() behaviour\r\n\t\tif (!this.includes(asset_path, description) || this.excludes(asset_path, description))\r\n\t\t{\r\n\t\t\tthis.log.debug(` skipping require call for ${asset_path}`)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// track cached assets (only in development mode)\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\t// mark this asset as cached\r\n\t\t\tthis.cached_assets.push(global_asset_path)\r\n\t\t}\r\n\t\t\r\n\t\t// return CommonJS module source for this asset\r\n\t\treturn require_hacker.to_javascript_module_source(this.asset_source(webpack_path(asset_path)))\r\n\t}\r\n\r\n\t// returns asset source by path (looks it up in webpack-assets.json)\r\n\tasset_source(asset_path)\r\n\t{\r\n\t\tthis.log.debug(` requiring ${asset_path}`)\r\n\r\n\t\t// get real file path list\r\n\t\tvar assets = this.assets().assets\r\n\t\t\r\n\t\t// find this asset in the real file path list\r\n\t\tconst asset = assets[asset_path]\r\n\t\t\r\n\t\t// if the asset was not found in the list, \r\n\t\t// return nothing and output an error\r\n\t\tif (!exists(asset))\r\n\t\t{\r\n\t\t\tthis.log.error(`asset not found: ${asset_path}`)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// the asset was found in the list - return it\r\n\t\treturn asset\r\n\t}\r\n\r\n\t// unregisters require() hooks\r\n\tundo()\r\n\t{\r\n\t\t// for each user specified asset type,\r\n\t\t// unregister a require() hook for each file extension of this asset type\r\n\t\tfor (let hook of this.hooks)\r\n\t\t{\r\n\t\t\thook.unmount()\r\n\t\t}\r\n\r\n\t\t// this.asset_hook.unmount()\r\n\r\n\t\t// unmount the aliasing hook (if mounted)\r\n\t\tif (this.alias_hook)\r\n\t\t{\r\n\t\t\tthis.alias_hook.unmount()\r\n\t\t}\r\n\t}\r\n\r\n\t// Checks if the required path should be excluded from the custom require() hook\r\n\texcludes(path, options)\r\n\t{\r\n\t\t// if \"exclude\" parameter isn't specified, then exclude nothing\r\n\t\tif (!exists(options.exclude))\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// for each exclusion case\r\n\t\tfor (let exclude of options.exclude)\r\n\t\t{\r\n\t\t\t// supports regular expressions\r\n\t\t\tif (exclude instanceof RegExp)\r\n\t\t\t{\r\n\t\t\t\tif (exclude.test(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// check for a compex logic match\r\n\t\t\telse if (typeof exclude === 'function')\r\n\t\t\t{\r\n\t\t\t\tif (exclude(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// otherwise check for a simple textual match\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (exclude === path)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// no matches found.\r\n\t\t// returns false so that it isn't undefined (for testing purpose)\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Checks if the required path should be included in the custom require() hook\r\n\tincludes(path, options)\r\n\t{\r\n\t\t// if \"include\" parameter isn't specified, then include everything\r\n\t\tif (!exists(options.include))\r\n\t\t{\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\t// for each inclusion case\r\n\t\tfor (let include of options.include)\r\n\t\t{\r\n\t\t\t// supports regular expressions\r\n\t\t\tif (include instanceof RegExp)\r\n\t\t\t{\r\n\t\t\t\tif (include.test(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// check for a compex logic match\r\n\t\t\telse if (typeof include === 'function')\r\n\t\t\t{\r\n\t\t\t\tif (include(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// otherwise check for a simple textual match\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (include === path)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// no matches found.\r\n\t\t// returns false so that it isn't undefined (for testing purpose)\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Waits for webpack-assets.json to be created after Webpack build process finishes\r\n\t//\r\n\t// The callback is called when `webpack-assets.json` has been found \r\n\t// (it's needed for development because `webpack-dev-server` \r\n\t//  and your application server are usually run in parallel).\r\n\t//\r\n\twait_for_assets(done)\r\n\t{\r\n\t\t// condition check interval\r\n\t\tconst check_interval = 300 // in milliseconds\r\n\t\tconst message_interval = 2000 // in milliseconds\r\n\r\n\t\t// show the message not too often\r\n\t\tlet message_timer = 0\r\n\r\n\t\t// selfie\r\n\t\tconst tools = this\r\n\r\n\t\t// waits for condition to be met, then proceeds\r\n\t\tfunction wait_for(condition, proceed)\r\n\t\t{\r\n\t\t\tfunction check()\r\n\t\t\t{\r\n\t\t\t\t// if the condition is met, then proceed\r\n\t\t\t\tif (condition())\r\n\t\t\t\t{\r\n\t\t\t\t\treturn proceed()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmessage_timer += check_interval\r\n\r\n\t\t\t\tif (message_timer >= message_interval)\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage_timer = 0\r\n\r\n\t\t\t\t\ttools.log.debug(`(${tools.webpack_assets_path} not found)`)\r\n\t\t\t\t\ttools.log.info('(waiting for the first Webpack build to finish)')\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetTimeout(check, check_interval)\r\n\t\t\t}\r\n\r\n\t\t\tcheck()\r\n\t\t}\r\n\r\n\t\t// wait for webpack-assets.json to be written to disk by Webpack\r\n\t\twait_for(() => fs.existsSync(this.webpack_assets_path), done)\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n}"]}