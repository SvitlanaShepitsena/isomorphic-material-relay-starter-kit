'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = prepareData;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _reactRelay = require('react-relay');

var _reactRelay2 = _interopRequireDefault(_reactRelay);

var _RelayQuery = require('react-relay/lib/RelayQuery');

var _RelayQuery2 = _interopRequireDefault(_RelayQuery);

var _RelayStoreData2 = require('react-relay/lib/RelayStoreData');

var _RelayStoreData3 = _interopRequireDefault(_RelayStoreData2);

var _toGraphQL = require('react-relay/lib/toGraphQL');

var _toGraphQL2 = _interopRequireDefault(_toGraphQL);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var globalStoreData = _RelayStoreData3.default.getDefaultInstance();

function prepareData(_ref) {
    console.log('run here prepareData.js');
    var Component = _ref.Component;
    var route = _ref.route;

    return new _promise2.default(function (resolve, reject) {
        var data = [];

        var storeData = new (function (_RelayStoreData) {
            (0, _inherits3.default)(_class, _RelayStoreData);

            function _class() {
                (0, _classCallCheck3.default)(this, _class);
                return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(_class).apply(this, arguments));
            }

            (0, _createClass3.default)(_class, [{
                key: 'handleQueryPayload',
                value: function handleQueryPayload(query, result, forceIndex) {
                    data.push({ query: _toGraphQL2.default.Query(query), result: result });

                    globalStoreData.handleQueryPayload(query, result, forceIndex);
                }
            }]);
            return _class;
        }(_RelayStoreData3.default))();

        var querySet = _reactRelay2.default.getQueries(Component, route);

        storeData.getQueryRunner().forceFetch(querySet, onReadyStateChange);

        function onReadyStateChange(_ref2) {
            var aborted = _ref2.aborted;
            var done = _ref2.done;
            var error = _ref2.error;
            var stale = _ref2.stale;

            if (error) {
                reject(error);
            } else if (aborted) {
                reject(new Error('Aborted'));
            } else if (done && !stale) {
                resolve(data);
            }
        }
    });
}