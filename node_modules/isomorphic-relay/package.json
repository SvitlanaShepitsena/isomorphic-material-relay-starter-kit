{
  "_args": [
    [
      "isomorphic-relay@https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.4.2.tgz",
      "C:\\App\\isomorphic-material-relay-starter-kit"
    ]
  ],
  "_from": "isomorphic-relay@>=0.4.2 <0.5.0",
  "_id": "isomorphic-relay@0.4.2",
  "_inCache": true,
  "_location": "/isomorphic-relay",
  "_phantomChildren": {},
  "_requested": {
    "name": "isomorphic-relay",
    "raw": "isomorphic-relay@https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.4.2.tgz",
    "rawSpec": "https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.4.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.4.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.4.2.tgz",
  "_shasum": "1dc3be7114bd8365d3f9d40a568e7fa71b11c13c",
  "_shrinkwrap": null,
  "_spec": "isomorphic-relay@https://registry.npmjs.org/isomorphic-relay/-/isomorphic-relay-0.4.2.tgz",
  "_where": "C:\\App\\isomorphic-material-relay-starter-kit",
  "author": {
    "name": "Denis Nedelyaev"
  },
  "bugs": {
    "url": "https://github.com/denvned/isomorphic-relay/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.3.19",
    "isomorphic-fetch": "^2.2.0"
  },
  "description": "Adds server side rendering support to React Relay",
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-plugin-transform-runtime": "^6.3.13",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "babel-preset-stage-0": "^6.3.13"
  },
  "homepage": "https://github.com/denvned/isomorphic-relay",
  "keywords": [
    "isomorphic",
    "isomorphic-react-relay",
    "isomorphic-relay",
    "react",
    "react-relay",
    "relay",
    "server",
    "server-rendering",
    "server-side",
    "server-side-rendering"
  ],
  "license": "BSD-2-Clause",
  "main": "lib/IsomorphicRelay.js",
  "name": "isomorphic-relay",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-relay": "0.6.1"
  },
  "readme": "Isomorphic React Relay [![npm version][npm-badge]][npm]\n======================\nAdds server side rendering support to [React Relay](https://facebook.github.io/relay/).\n\nIf you are using [react-router-relay](https://github.com/relay-tools/react-router-relay),\nthen you might also be interested in\n[isomorphic-relay-router](https://github.com/denvned/isomorphic-relay-router),\nwhich uses *isomorphic-relay*.\n\nAcknowledgments\n---------------\n\nThanks to [@voideanvalue](https://github.com/voideanvalue) for the\n[information](https://github.com/facebook/relay/issues/36#issuecomment-130402024)\nthat helped create the initial version this project. I also thanks\n[@josephsavona](https://github.com/josephsavona) for valuable\n[advices](https://github.com/facebook/relay/issues/589) that helped improve it.\n\nInstallation\n------------\n\n    npm install -S isomorphic-relay\n\nHow to use\n----------\n\nMake sure *isomorphic-relay* module is loaded before *react-relay* on the server,\nbecause *isomorphic-relay* includes a hack to prevent *\"self is not defined\"* error\n(see https://github.com/facebook/fbjs/issues/47):\n```javascript\n// First load isomorphic-relay:\nimport IsomorphicRelay from 'isomorphic-relay';\n\n// And only then load react-relay:\nimport Relay from 'react-relay';\n```\n\nDon't forget to inject a network layer to Relay on the server.\nAnd if you are using `Relay.DefaultNetworkLayer`, specify the full url to the GraphQL endpoint:\n```javascript\nconst GRAPHQL_URL = `http://localhost:8080/graphql`;\n\nRelay.injectNetworkLayer(new Relay.DefaultNetworkLayer(GRAPHQL_URL));\n```\n\nInject a no-op batching strategy into the Relay *change emitter*, but **only on the server:**\n```javascript\nimport RelayStoreData from 'react-relay/lib/RelayStoreData';\n\nRelayStoreData.getDefaultInstance().getChangeEmitter().injectBatchingStrategy(() => {});\n```\n\nWhen processing a request **on the server**, prepare the data using `IsomorphicRelay.prepareData`,\nthen render React using `IsomorphicRelay.RootContainer` in place of `Relay.RootContainer`,\nand send the React output along with the data to the client:\n```javascript\napp.get('/', (req, res, next) => {\n  const rootContainerProps = {\n    Component: MyContainer,\n    route: new MyRoute(),\n  };\n\n  IsomorphicRelay.prepareData(rootContainerProps).then(data => {\n    const reactOutput = ReactDOMServer.renderToString(\n      <IsomorphicRelay.RootContainer {...rootContainerProps} />\n    );\n\n    res.render('index.ejs', {\n      preloadedData: JSON.stringify(data),\n      reactOutput\n    });\n  }, next);\n});\n```\n\nOn page load **in the browser**, inject the prepared data to the Relay store\nusing `IsomorphicRelay.injectPreparedData`, then render React using `IsomorphicRelay.RootContainer`\nin place of `Relay.RootContainer`:\n```javascript\nconst data = JSON.parse(document.getElementById('preloadedData').textContent);\n\nIsomorphicRelay.injectPreparedData(data);\n\nconst rootElement = document.getElementById('root');\n\n// use the same rootContainerProps as on the server\nReactDOM.render(<IsomorphicRelay.RootContainer {...rootContainerProps} />, rootElement);\n```\n\nExample\n-------\nSee [here](examples/star-wars).\n\n[npm-badge]: https://img.shields.io/npm/v/isomorphic-relay.svg\n[npm]: https://www.npmjs.com/package/isomorphic-relay\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/denvned/isomorphic-relay.git"
  },
  "scripts": {
    "build": "babel --presets es2015,stage-0,react --plugins transform-runtime src --out-dir lib",
    "prepublish": "npm run build"
  },
  "version": "0.4.2"
}
